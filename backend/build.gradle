apply from: "$rootDir/functions.gradle"
apply from: "$rootDir/versions.gradle"
apply from: "$rootDir/configs.gradle"

buildscript {
    apply from: "$rootDir/functions.gradle"
    apply from: "$rootDir/versions.gradle"
    apply from: "$rootDir/configs.gradle"
    repositories {
        if (doWeHaveToUseArtifactory())
            maven { url(configs.artifactory) }
        else {
            jcenter()
            maven { url (configs.ktor) }
        }
    }
    dependencies {
        if (doWeHaveToUseArtifactory())
            classpath(deps.jfrog)
        classpath(deps.kotlin.plugin)
    }
}

apply plugin: "kotlin"
apply plugin: "application"

group = "org.ninrod.blog"
version = "0.0.1"
sourceCompatibility = 1.8
mainClassName = "org.ninrod.blog.MainKt"

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    if (doWeHaveToUseArtifactory())
        maven { url (configs.artifactory) }
        else {
            jcenter()
        maven { url (configs.ktor) }
        }
}

test {
    useJUnitPlatform()
}

dependencies {
    // kotlin main
    compile(deps.kotlin.stdlib)
    compile(deps.kotlin.reflect)

    //ktor
    compile(deps.ktor.netty)
    compile(deps.ktor.core)
    compile(deps.ktor.jwt)
    compile(deps.ktor.gson)
    compile(deps.ktor.logback)

    // db
    compile(deps.exposed)
    compile(deps.postgre)

    // tests
    testCompile(deps.junit.api)
    testCompile(deps.ktor.test.core)
    testCompile(deps.ktor.test.host)
    testCompile(deps.kluent)

    testRuntimeOnly(deps.junit.engine)
    testRuntimeOnly(deps.junit.vintage)
}

jar {
    manifest {
        attributes 'Main-Class': application.mainClassName
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
