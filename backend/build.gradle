buildscript {
    apply from: "$rootDir/functions.gradle"
    repositories {
        if (doWeHaveToUseArtifactory())
            maven { url(Config.artifactoryUrl)}
        else {
            jcenter()
            maven { url 'https://kotlin.bintray.com/ktor' }
        }
    }
    dependencies {
        if (doWeHaveToUseArtifactory())
            classpath(Libs.jfrog_plugin)
        classpath(Libs.kotlin_plugin)
    }
}

apply plugin: "kotlin"
apply plugin: "application"

group = "org.ninrod.blog"
version = "0.0.1"
sourceCompatibility = 1.8
mainClassName = "org.ninrod.blog.EntrypointKt"

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    if (doWeHaveToUseArtifactory())
        maven { url "${artifactory_gradle}"}
        else {
            jcenter()
            maven { url 'https://kotlin.bintray.com/ktor' }
        }
}

test {
    useJUnitPlatform()
}

dependencies {
    // kotlin main
    compile(Libs.kotlin_stdlib)
    compile(Libs.kotlin_reflect)

    //ktor
    compile(Libs.ktor_logback)
    compile(Libs.ktor_netty)
    compile(Libs.ktor_server_core)
    compile(Libs.ktor_auth)
    compile(Libs.ktor_auth_jwt)
    compile(Libs.ktor_locations)
    compile(Libs.ktor_gson)

    // slf4j
    compile(Libs.slf4j_api)
    compile(Libs.slf4j_simple)

    // db
    compile(Libs.exposed)
    compile(Libs.postgresql)

    // tests
    testCompile(Libs.junit_api)
    testRuntimeOnly(Libs.junit_engine)

    testCompile(Libs.ktor_test)
}

jar {
    manifest {
        attributes 'Main-Class': application.mainClassName
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
